import { createSlice } from '@reduxjs/toolkit';
import {
  flashButton,
  playSound,
  keyLookup,
  keys
} from './drumFunctions'

const initialState = {
  power: true,
  volume: 100,
  track: '0',
  text: ''
};

export const drumSlice = createSlice({
  name: 'drum',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    pressKey: (state, action) => {
      const keyPressed = action.payload;
      if(state.power) {
        // play flash animation
        // TODO
        flashButton(keyPressed)
        // play sound
        playSound(keyPressed, state.track, state.volume)
        // update text box
        state.text = keyLookup(keyPressed, state.track)
      }
    },

    flipPower: (state, action) => {
      // I know this is terrible for a redux app, but this is in createSlice so it's okay
      if(state.power) state.text = ''
      state.power = !state.power
    },

    flipTrack: (state, action) => {
      state.track = 1 - state.track
    }
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  // extraReducers: ,
});

export const { pressKey, flipPower, flipTrack } = drumSlice.actions;

export default drumSlice.reducer;
